-- Productivity Management App Database Schema

-- Main tasks/projects table
CREATE TABLE tasks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    description TEXT,
    status TEXT NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'in_progress', 'completed', 'cancelled', 'on_hold')),
    priority INTEGER NOT NULL DEFAULT 3 CHECK (priority BETWEEN 1 AND 5), -- 1=highest, 5=lowest
    category_id INTEGER,
    parent_task_id INTEGER, -- For subtasks/project hierarchy
    
    -- Time management
    estimated_duration INTEGER, -- in minutes
    actual_duration INTEGER, -- in minutes
    due_date DATETIME,
    start_date DATETIME,
    completion_date DATETIME,
    
    -- Progress tracking
    progress_percentage INTEGER DEFAULT 0 CHECK (progress_percentage BETWEEN 0 AND 100),
    difficulty_level INTEGER CHECK (difficulty_level BETWEEN 1 AND 5), -- 1=easy, 5=very hard
    
    -- Productivity metrics
    energy_level_required INTEGER CHECK (energy_level_required BETWEEN 1 AND 5), -- 1=low, 5=high
    focus_time_required INTEGER, -- in minutes of uninterrupted focus
    
    -- Context and environment
    location TEXT, -- home, office, anywhere, etc.
    tools_required TEXT, -- JSON array or comma-separated
    prerequisites TEXT, -- what needs to be done first
    
    -- Motivation and accountability
    reward TEXT, -- reward for completion
    consequences TEXT, -- consequences of not completing
    accountability_partner TEXT,
    
    -- Metadata
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    created_by TEXT, -- user identifier
    notes TEXT,
    tags TEXT, -- JSON array or comma-separated
    
    -- References
    FOREIGN KEY (category_id) REFERENCES categories(id),
    FOREIGN KEY (parent_task_id) REFERENCES tasks(id)
);

-- Categories for organizing tasks
CREATE TABLE categories (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    color TEXT, -- hex color code for UI
    icon TEXT, -- icon identifier
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Time tracking sessions
CREATE TABLE time_sessions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    task_id INTEGER NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME,
    duration INTEGER, -- calculated in minutes
    session_type TEXT DEFAULT 'work' CHECK (session_type IN ('work', 'break', 'planning', 'review')),
    productivity_rating INTEGER CHECK (productivity_rating BETWEEN 1 AND 5),
    notes TEXT,
    interruptions INTEGER DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE
);

-- Habits and recurring tasks
CREATE TABLE habits (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT,
    frequency_type TEXT NOT NULL CHECK (frequency_type IN ('daily', 'weekly', 'monthly', 'custom')),
    frequency_value INTEGER, -- for custom frequencies
    target_streak INTEGER, -- goal streak length
    current_streak INTEGER DEFAULT 0,
    best_streak INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    category_id INTEGER,
    reminder_time TIME,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Habit completion tracking
CREATE TABLE habit_completions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    habit_id INTEGER NOT NULL,
    completion_date DATE NOT NULL,
    completed BOOLEAN DEFAULT TRUE,
    notes TEXT,
    mood_rating INTEGER CHECK (mood_rating BETWEEN 1 AND 5),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (habit_id) REFERENCES habits(id) ON DELETE CASCADE,
    UNIQUE(habit_id, completion_date)
);

-- Goals and objectives
CREATE TABLE goals (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    description TEXT,
    goal_type TEXT CHECK (goal_type IN ('short_term', 'medium_term', 'long_term', 'yearly', 'lifetime')),
    status TEXT DEFAULT 'active' CHECK (status IN ('active', 'completed', 'paused', 'cancelled')),
    target_date DATE,
    completion_date DATE,
    progress_percentage INTEGER DEFAULT 0 CHECK (progress_percentage BETWEEN 0 AND 100),
    measurable_target TEXT, -- specific measurable outcome
    category_id INTEGER,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Link tasks to goals
CREATE TABLE task_goals (
    task_id INTEGER,
    goal_id INTEGER,
    contribution_weight INTEGER DEFAULT 1, -- how much this task contributes to the goal
    
    PRIMARY KEY (task_id, goal_id),
    FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
    FOREIGN KEY (goal_id) REFERENCES goals(id) ON DELETE CASCADE
);

-- Daily/weekly reviews and reflections
CREATE TABLE reviews (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    review_date DATE NOT NULL,
    review_type TEXT NOT NULL CHECK (review_type IN ('daily', 'weekly', 'monthly', 'quarterly')),
    
    -- Productivity metrics
    tasks_completed INTEGER DEFAULT 0,
    tasks_planned INTEGER DEFAULT 0,
    total_focus_time INTEGER DEFAULT 0, -- in minutes
    productivity_score INTEGER CHECK (productivity_score BETWEEN 1 AND 10),
    
    -- Reflections
    what_went_well TEXT,
    what_to_improve TEXT,
    lessons_learned TEXT,
    tomorrow_focus TEXT, -- for daily reviews
    next_week_priorities TEXT, -- for weekly reviews
    
    -- Mood and energy
    overall_mood INTEGER CHECK (overall_mood BETWEEN 1 AND 5),
    energy_level INTEGER CHECK (energy_level BETWEEN 1 AND 5),
    stress_level INTEGER CHECK (stress_level BETWEEN 1 AND 5),
    
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Reminders and notifications
CREATE TABLE reminders (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    task_id INTEGER,
    habit_id INTEGER,
    goal_id INTEGER,
    reminder_time DATETIME NOT NULL,
    message TEXT,
    reminder_type TEXT CHECK (reminder_type IN ('due_date', 'start_time', 'habit_reminder', 'goal_check')),
    is_sent BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
    FOREIGN KEY (habit_id) REFERENCES habits(id) ON DELETE CASCADE,
    FOREIGN KEY (goal_id) REFERENCES goals(id) ON DELETE CASCADE
);

-- Productivity insights and analytics
CREATE TABLE productivity_metrics (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    metric_date DATE NOT NULL,
    total_tasks_completed INTEGER DEFAULT 0,
    total_focus_time INTEGER DEFAULT 0, -- in minutes
    average_task_completion_time INTEGER, -- in minutes
    most_productive_hour INTEGER, -- 0-23
    most_productive_category_id INTEGER,
    procrastination_score INTEGER CHECK (procrastination_score BETWEEN 1 AND 10),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (most_productive_category_id) REFERENCES categories(id)
);

-- Indexes for better performance
CREATE INDEX idx_tasks_status ON tasks(status);
CREATE INDEX idx_tasks_due_date ON tasks(due_date);
CREATE INDEX idx_tasks_priority ON tasks(priority);
CREATE INDEX idx_tasks_category ON tasks(category_id);
CREATE INDEX idx_tasks_created_at ON tasks(created_at);
CREATE INDEX idx_time_sessions_task ON time_sessions(task_id);
CREATE INDEX idx_time_sessions_date ON time_sessions(start_time);
CREATE INDEX idx_habit_completions_date ON habit_completions(completion_date);
CREATE INDEX idx_reviews_date ON reviews(review_date);

-- Triggers to automatically update timestamps
CREATE TRIGGER update_task_timestamp 
    AFTER UPDATE ON tasks
    FOR EACH ROW
    WHEN NEW.updated_at = OLD.updated_at
BEGIN
    UPDATE tasks SET updated_at = CURRENT_TIMESTAMP WHERE id = NEW.id;
END;

-- Sample data insertion
INSERT INTO categories (name, description, color, icon) VALUES
('Work', 'Professional tasks and projects', '#3B82F6', 'briefcase'),
('Personal', 'Personal development and life tasks', '#10B981', 'user'),
('Health', 'Health and fitness related activities', '#EF4444', 'heart'),
('Learning', 'Education and skill development', '#8B5CF6', 'book'),
('Finance', 'Financial planning and management', '#F59E0B', 'dollar-sign');

-- Sample task
INSERT INTO tasks (title, description, status, priority, category_id, estimated_duration, due_date, energy_level_required, focus_time_required, tags) 
VALUES (
    'Complete quarterly project report',
    'Analyze Q4 performance metrics and prepare comprehensive report for stakeholders',
    'pending',
    2,
    1,
    180,
    '2025-06-20 17:00:00',
    4,
    120,
    '["reporting", "analysis", "quarterly"]'
);